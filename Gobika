// server.js (Backend - Node.js & Express) const express = require('express'); const mongoose = require('mongoose'); const cors = require('cors');

const app = express(); app.use(express.json()); app.use(cors());

// Connect to MongoDB mongoose.connect('mongodb://localhost:27017/eventdb', { useNewUrlParser: true, useUnifiedTopology: true, }).then(() => console.log('MongoDB connected')) .catch(err => console.log(err));

// Event Schema const EventSchema = new mongoose.Schema({ name: String, date: String, location: String, description: String });

const Event = mongoose.model('Event', EventSchema);

// Routes app.get('/events', async (req, res) => { const events = await Event.find(); res.json(events); });

app.post('/events', async (req, res) => { const newEvent = new Event(req.body); await newEvent.save(); res.json({ message: 'Event Created' }); });

app.delete('/events/:id', async (req, res) => { await Event.findByIdAndDelete(req.params.id); res.json({ message: 'Event Deleted' }); });

const PORT = 5000; app.listen(PORT, () => console.log(Server running on port ${PORT}));

